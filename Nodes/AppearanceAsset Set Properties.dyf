{
  "Uuid": "77d92a1f-f9ee-4115-959a-260ed08d9bf7",
  "IsCustomNode": true,
  "Category": "GeniusLoci.Material",
  "Description": "Set the properties and their values in the given AppearanceAssetElement.\r\nYou can find the property's name with the AppearanceAsset Get Properties node.",
  "Name": "AppearanceAsset Set Properties",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Alban de Chasteigner 2022\n#twitter : @geniusloci_bim\n#geniusloci.bim@gmail.com\n\nimport clr\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\nfrom Autodesk.Revit.DB.Visual import *\nclr.AddReference('RevitServices')\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\ndef toList(obj):\n    if hasattr(obj, '__iter__'): return obj\n    else: return [obj]\n    \nassetElems = toList(UnwrapElement(IN[0]))\nparameters = toList(IN[1])\nvalues = toList(IN[2])\n\nasset_len = len(assetElems) == 1\nval_len = len(values) == 1\n\ndef ToRevitColor(dynamoColor):\n\treturn Color(dynamoColor.Red, dynamoColor.Green, dynamoColor.Blue)\n\nfor i in xrange(len(parameters)):\n\tparam = parameters[i]\n\ta = 0 if asset_len else i\n\tv = 0 if val_len else i\n#for assetElem, parameter, value in zip(assetElems, parameters, values):\n\tTransactionManager.Instance.EnsureInTransaction(doc)\n\twith Visual.AppearanceAssetEditScope(assetElems[a].Document) as editScope:\n\t\teditableAsset = editScope.Start(assetElems[a].Id)\n\t\tproperty = editableAsset.FindByName(param)\n\t\tif param == \"UIName\":\n\t\t\tassetElem.Name = values[v]\n\t\tif property.IsEditable():\n\t\t\tif not isinstance(property, AssetPropertyDoubleArray4d):\n\t\t\t\tproperty.Value = values[v]\n\t\t\telse: \n\t\t\t\tproperty.SetValueAsColor(ToRevitColor(values[v]))\n\t\teditScope.Commit(True)\n\tTransactionManager.Instance.TransactionTaskDone()\n\nOUT = assetElems",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1ea673372d644f1e8437efc72fd73629",
      "Inputs": [
        {
          "Id": "0d4441c9b1ec4b2596988b90dadedad7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3189dc701ec34a8a890529e5ff93deb6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5d3241bd26444f1b019b8d9a922904f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8914f8a877544d33a1306eb2557a8d34",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script Python intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "appearanceAsset",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "0cd21d001f7d49e7b01c8883e7b7c1ab",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "65b28a439e0f43b699e938682ec15d12",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "property",
        "TypeName": "string",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "6e1c19f9afef404fa2e6c491e5bea872",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "58301f8286f2420ba5d994e6b7243061",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "value",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "60ff1c1ceb68461ba16ecbac06d9b7d8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3c56849597f54440ac88e62d1489f8e4",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "65b28a439e0f43b699e938682ec15d12",
      "End": "0d4441c9b1ec4b2596988b90dadedad7",
      "Id": "98bb1bcdd3984c799683687aff4519ad",
      "IsHidden": "False"
    },
    {
      "Start": "58301f8286f2420ba5d994e6b7243061",
      "End": "3189dc701ec34a8a890529e5ff93deb6",
      "Id": "41a5506470674f7fa9f4dd57bc2e857a",
      "IsHidden": "False"
    },
    {
      "Start": "3c56849597f54440ac88e62d1489f8e4",
      "End": "f5d3241bd26444f1b019b8d9a922904f",
      "Id": "9c3c167fc9754b8c8809315ef801aa43",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Set Properties",
        "ShowGeometry": true,
        "Id": "1ea673372d644f1e8437efc72fd73629",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 508.0,
        "Y": 342.79999999999995
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "0cd21d001f7d49e7b01c8883e7b7c1ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 251.2000000000001,
        "Y": 231.59999999999997
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "6e1c19f9afef404fa2e6c491e5bea872",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 187.60000000000002,
        "Y": 371.99999999999994
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "60ff1c1ceb68461ba16ecbac06d9b7d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 270.80000000000007,
        "Y": 527.6
      }
    ],
    "Annotations": [],
    "X": 82.529999999999973,
    "Y": 36.792,
    "Zoom": 0.8425
  }
}